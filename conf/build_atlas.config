
/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per workflow/module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

//
// General configuration options
//

process {
    publishDir = [
        path: { "${params.outdir}/artifacts/build_atlas/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}


//
// Module specific configuration options
//

def constructPath = { processName, levels ->
    def tokens = processName.tokenize(':').collect { it.toLowerCase() }
    return (tokens[-levels..-1]).join('/')
}

process {

    withName: ".*Che_2021.*|.*Chen_2021.*|.*Chen_2024.*|.*Conde_2022.*|.*Guo_2022.*|.*Sathe_2023.*|.*James_2020.*|.*MUI_Innsbruck.*|.*Ji_2024_Cancer_Lett.*|.*Han_2020.*|.*Lee.*|.*Pelka_2021_Cell.*" {
        cpus=12
        memory ='100 GB'
        time ='1h'
        //executor = 'local'
    }

    withName: ".*Elmentaite_2021_Nature.*|.*Pelka_2021_HTAN.*|.*GarridoTrigo.*" {
        cpus=12
        memory ='250 GB'
        time = '1h'
    }

    withName: ".*Harmonize.*|.*Concat_datasets.*|.*Filter_mito.*|.*Get_Seeds.*|.*HVG.*|.*Merge_Seeds.*|.*Merge_SOLO.*|.*Prepare.*|.*SEED_.*|.*SPLIT_ADATA_BY_BATCH.*|.*Annotate_cell_types_coarse.*|.*SCORE_CELL_CYCLE.*" {
        cpus=24
        memory ='990 GB'
        time = '4h'
    }

    withName: ".*SCVI.*|.*SCANVI.*|.*Annotate.*" {
        memory ='990 GB'
        time = '4h'
    }

    withName: ".*Integrate_datasets.*|.*Load_datasets.*|.*Annotate_cell_types.*" {

        publishDir = [
            path: { "${params.outdir}/artifacts/${constructPath(task.process, 3)}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        //executor = 'local'
    }

    withName: ".*HVG_.*|.*SEED_.*|.*SCVI.*" {
        publishDir = [
            path: {
                def splitTokens = task.process.tokenize(':')[-1].split('_', 2).collect { it.toLowerCase() }
                "${params.outdir}/artifacts/build_atlas/integrate_datasets/${splitTokens[0]}/${splitTokens[1]}"
            },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ".*REMOVE_AMBIENT_RNA.*|.*CELL_CYCLE_PHASE.*|.*NEIGHBORS_LEIDEN_UMAP.*|.*NEIGHBORS_LEIDEN_UMAP_SCANVI.*|.*SOLO_DOUBLETS.*" {
        ext.ignore_error = true
        publishDir = [
            path: { "${params.outdir}/artifacts/${constructPath(task.process, 4)}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: ".*SPLIT_ADATA_BY_BATCH.*|.*REMOVE_AMBIENT_RNA:SCAR.*|.*:NEIGHBORS.*" {
        publishDir = [
            enabled: false
        ]
    }

}